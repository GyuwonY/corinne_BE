# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: corinne

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on : ubuntu-20.04
    env:
      JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make Directory for deliver
        run: mkdir deploy

        # Jar file Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

        # appspec.yml file Copy
      - name: Copy appspec
        run: cp ./appspec.yml ./deploy/

        # script file Copy
      - name: Copy shell
        run: cp ./scripts/* ./deploy/

        # 압축파일 형태로 전달(codedeploy는 zip형식만 읽을 수 있음)
      - name: Make zip file
        run: zip -r -qq -j ./corinne-build.zip ./deploy


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          ./corinne-build.zip s3://corinne-bucket/

      - name: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name corinne-deploy \
          --deployment-group-name corinne_project \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=corinne-bucket,bundleType=zip,key=corinne-build.zip \
          --region ap-northeast-2